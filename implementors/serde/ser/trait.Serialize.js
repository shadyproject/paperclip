(function() {var implementors = {};
implementors["paperclip_core"] = [{"text":"impl&lt;T&gt; Serialize for Resolvable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Coder","synthetic":false,"types":[]},{"text":"impl Serialize for MediaRange","synthetic":false,"types":[]},{"text":"impl Serialize for Coders","synthetic":false,"types":[]},{"text":"impl Serialize for Version","synthetic":false,"types":[]},{"text":"impl Serialize for DataType","synthetic":false,"types":[]},{"text":"impl Serialize for DataTypeFormat","synthetic":false,"types":[]},{"text":"impl&lt;P, R, S&gt; Serialize for Api&lt;P, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for DefaultSchemaRaw","synthetic":false,"types":[]},{"text":"impl Serialize for DefaultSchema","synthetic":false,"types":[]},{"text":"impl Serialize for Info","synthetic":false,"types":[]},{"text":"impl Serialize for Contact","synthetic":false,"types":[]},{"text":"impl Serialize for License","synthetic":false,"types":[]},{"text":"impl Serialize for SecurityScheme","synthetic":false,"types":[]},{"text":"impl Serialize for Tag","synthetic":false,"types":[]},{"text":"impl Serialize for ExternalDocs","synthetic":false,"types":[]},{"text":"impl&lt;P, R&gt; Serialize for PathItem&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Serialize for Parameter&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Items","synthetic":false,"types":[]},{"text":"impl Serialize for ParameterIn","synthetic":false,"types":[]},{"text":"impl Serialize for CollectionFormat","synthetic":false,"types":[]},{"text":"impl&lt;P, R&gt; Serialize for Operation&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Reference","synthetic":false,"types":[]},{"text":"impl Serialize for OperationProtocol","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Serialize for Response&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Header","synthetic":false,"types":[]},{"text":"impl Serialize for HttpMethod","synthetic":false,"types":[]},{"text":"impl&lt;L, R&gt; Serialize for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Serialize,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()