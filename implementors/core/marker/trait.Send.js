(function() {var implementors = {};
implementors["paperclip"] = [{"text":"impl Send for PaperClipError","synthetic":true,"types":[]},{"text":"impl !Send for EmitterState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Send for DefaultEmitter&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Send for CrateMeta","synthetic":true,"types":[]},{"text":"impl Send for EmittedUnit","synthetic":true,"types":[]},{"text":"impl Send for EmitMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ApiObjectImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Send for ApiObjectBuilderImpl&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Send for ApiObject","synthetic":true,"types":[]},{"text":"impl Send for PathOps","synthetic":true,"types":[]},{"text":"impl Send for OpRequirement","synthetic":true,"types":[]},{"text":"impl&lt;S, H&gt; Send for Response&lt;S, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Parameter","synthetic":true,"types":[]},{"text":"impl Send for ObjectVariant","synthetic":true,"types":[]},{"text":"impl Send for ObjectField","synthetic":true,"types":[]},{"text":"impl Send for ObjectContainer","synthetic":true,"types":[]}];
implementors["paperclip_actix"] = [{"text":"impl&lt;T, B&gt; !Send for App&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for Resource&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Scope&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Send for Route","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ServiceConfig&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["paperclip_core"] = [{"text":"impl Send for ValidationError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AcceptedJson&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for CreatedJson&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NoContent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for ResponderWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, H&gt; Send for ResponseWrapper&lt;T, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for MediaRange","synthetic":true,"types":[]},{"text":"impl Send for Coders","synthetic":true,"types":[]},{"text":"impl Send for Coder","synthetic":true,"types":[]},{"text":"impl&lt;P, R, S&gt; Send for Api&lt;P, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DefaultSchemaRaw","synthetic":true,"types":[]},{"text":"impl Send for DefaultSchema","synthetic":true,"types":[]},{"text":"impl Send for Info","synthetic":true,"types":[]},{"text":"impl Send for Contact","synthetic":true,"types":[]},{"text":"impl Send for License","synthetic":true,"types":[]},{"text":"impl Send for SecurityScheme","synthetic":true,"types":[]},{"text":"impl Send for Tag","synthetic":true,"types":[]},{"text":"impl Send for ExternalDocs","synthetic":true,"types":[]},{"text":"impl&lt;P, R&gt; Send for PathItem&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Parameter&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Items","synthetic":true,"types":[]},{"text":"impl&lt;P, R&gt; Send for Operation&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Reference","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Response&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Header","synthetic":true,"types":[]},{"text":"impl Send for Version","synthetic":true,"types":[]},{"text":"impl Send for DataType","synthetic":true,"types":[]},{"text":"impl Send for DataTypeFormat","synthetic":true,"types":[]},{"text":"impl Send for SpecFormat","synthetic":true,"types":[]},{"text":"impl Send for ParameterIn","synthetic":true,"types":[]},{"text":"impl Send for CollectionFormat","synthetic":true,"types":[]},{"text":"impl Send for OperationProtocol","synthetic":true,"types":[]},{"text":"impl Send for HttpMethod","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Send for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Resolvable&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()