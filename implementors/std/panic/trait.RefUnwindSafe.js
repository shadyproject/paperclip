(function() {var implementors = {};
implementors["paperclip"] = [{"text":"impl !RefUnwindSafe for PaperClipError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EmitterState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for DefaultEmitter&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CrateMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmittedUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmitMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ApiObjectImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; RefUnwindSafe for ApiObjectBuilderImpl&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApiObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathOps","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpRequirement","synthetic":true,"types":[]},{"text":"impl&lt;S, H&gt; RefUnwindSafe for Response&lt;S, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectContainer","synthetic":true,"types":[]}];
implementors["paperclip_actix"] = [{"text":"impl&lt;T, B&gt; !RefUnwindSafe for App&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Resource&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Scope&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Route","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ServiceConfig&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["paperclip_core"] = [{"text":"impl RefUnwindSafe for ValidationError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AcceptedJson&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for CreatedJson&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoContent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ResponderWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, H&gt; RefUnwindSafe for ResponseWrapper&lt;T, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MediaRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Coders","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Coder","synthetic":true,"types":[]},{"text":"impl&lt;P, R, S&gt; RefUnwindSafe for Api&lt;P, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultSchemaRaw","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DefaultSchema","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Contact","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for License","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecurityScheme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExternalDocs","synthetic":true,"types":[]},{"text":"impl&lt;P, R&gt; RefUnwindSafe for PathItem&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Parameter&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Items","synthetic":true,"types":[]},{"text":"impl&lt;P, R&gt; RefUnwindSafe for Operation&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reference","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Response&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataTypeFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParameterIn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectionFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OperationProtocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HttpMethod","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; RefUnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for Resolvable&lt;S&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()