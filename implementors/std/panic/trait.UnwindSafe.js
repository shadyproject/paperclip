(function() {var implementors = {};
implementors["paperclip"] = [{"text":"impl !UnwindSafe for PaperClipError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmitterState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for DefaultEmitter&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CrateMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmittedUnit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmitMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ApiObjectImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; UnwindSafe for ApiObjectBuilderImpl&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApiObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathOps","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpRequirement","synthetic":true,"types":[]},{"text":"impl&lt;S, H&gt; UnwindSafe for Response&lt;S, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parameter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectVariant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectContainer","synthetic":true,"types":[]}];
implementors["paperclip_actix"] = [{"text":"impl&lt;T, B&gt; !UnwindSafe for App&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Resource&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Scope&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Route","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ServiceConfig&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["paperclip_core"] = [{"text":"impl UnwindSafe for ValidationError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AcceptedJson&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for CreatedJson&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoContent","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ResponderWrapper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, H&gt; UnwindSafe for ResponseWrapper&lt;T, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MediaRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Coders","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Coder","synthetic":true,"types":[]},{"text":"impl&lt;P, R, S&gt; UnwindSafe for Api&lt;P, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultSchemaRaw","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DefaultSchema","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Info","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Contact","synthetic":true,"types":[]},{"text":"impl UnwindSafe for License","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecurityScheme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalDocs","synthetic":true,"types":[]},{"text":"impl&lt;P, R&gt; UnwindSafe for PathItem&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Parameter&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Items","synthetic":true,"types":[]},{"text":"impl&lt;P, R&gt; UnwindSafe for Operation&lt;P, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Reference","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Response&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataTypeFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParameterIn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CollectionFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OperationProtocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HttpMethod","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; UnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for Resolvable&lt;S&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()